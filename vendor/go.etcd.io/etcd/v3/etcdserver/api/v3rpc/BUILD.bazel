load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "auth.go",
        "codec.go",
        "grpc.go",
        "header.go",
        "interceptor.go",
        "key.go",
        "lease.go",
        "maintenance.go",
        "member.go",
        "metrics.go",
        "quota.go",
        "util.go",
        "watch.go",
    ],
    importmap = "github.com/f110/lagrangian-proxy/vendor/go.etcd.io/etcd/v3/etcdserver/api/v3rpc",
    importpath = "go.etcd.io/etcd/v3/etcdserver/api/v3rpc",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/dustin/go-humanize:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/auth:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/clientv3/credentials:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/etcdserver:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/etcdserver/api:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/etcdserver/api/membership:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/etcdserver/api/v3rpc/rpctypes:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/etcdserver/etcdserverpb:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/lease:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/mvcc:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/mvcc/backend:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/mvcc/mvccpb:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/pkg/adt:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/pkg/types:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/raft:go_default_library",
        "//vendor/go.etcd.io/etcd/v3/version:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/health:go_default_library",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
        "//vendor/google.golang.org/grpc/peer:go_default_library",
        "//vendor/google.golang.org/grpc/status:go_default_library",
    ],
)
