apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: backends.proxy.f110.dev
spec:
  group: proxy.f110.dev
  names:
    kind: Backend
    listKind: BackendList
    plural: backends
    singular: backend
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Backend is the Schema for the backends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackendSpec defines the desired state of Backend
            properties:
              agent:
                type: boolean
              allowHttp:
                type: boolean
              allowRootUser:
                type: boolean
              disableAuthn:
                type: boolean
              fqdn:
                type: string
              insecure:
                type: boolean
              layer:
                type: string
              permissions:
                items:
                  properties:
                    locations:
                      items:
                        properties:
                          any:
                            type: string
                          connect:
                            type: string
                          delete:
                            type: string
                          get:
                            type: string
                          head:
                            type: string
                          options:
                            type: string
                          patch:
                            type: string
                          post:
                            type: string
                          put:
                            type: string
                          trace:
                            type: string
                        type: object
                      type: array
                    name:
                      type: string
                  type: object
                type: array
              serviceSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  namespace:
                    type: string
                  port:
                    type: string
                  scheme:
                    type: string
                type: object
              upstream:
                type: string
              webhook:
                type: string
              webhookConfiguration:
                properties:
                  appIdKey:
                    type: string
                  contentType:
                    type: string
                  credentialSecretName:
                    type: string
                  events:
                    items:
                      type: string
                    type: array
                  installationIdKey:
                    type: string
                  path:
                    type: string
                  privateKeyKey:
                    type: string
                  repositories:
                    items:
                      type: string
                    type: array
                required:
                - repositories
                type: object
              webhookPath:
                items:
                  type: string
                type: array
            type: object
          status:
            description: BackendStatus defines the observed state of Backend
            properties:
              deployedBy:
                items:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    url:
                      type: string
                  type: object
                type: array
              webhookConfiguration:
                items:
                  properties:
                    repository:
                      type: string
                    updateTime:
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdclusters.etcd.f110.dev
spec:
  group: etcd.f110.dev
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    singular: etcdcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: string
    - description: Phase
      format: byte
      jsonPath: .status.phase
      name: phase
      type: string
    - description: Members
      format: byte
      jsonPath: .spec.members
      name: members
      type: string
    - description: Age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backup:
                properties:
                  intervalInSeconds:
                    type: integer
                  maxBackups:
                    type: integer
                  storage:
                    properties:
                      minio:
                        description: MinIO is in-cluster MinIO config
                        properties:
                          bucket:
                            type: string
                          credentialSelector:
                            properties:
                              accessKeyIDKey:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                              secretAccessKeyKey:
                                type: string
                            type: object
                          path:
                            type: string
                          secure:
                            type: boolean
                          serviceSelector:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                      s3:
                        properties:
                          accessKeyIDKey:
                            type: string
                          bucket:
                            type: string
                          credentialSecretName:
                            type: string
                          credentialSecretNamespace:
                            type: string
                          endpoint:
                            type: string
                          insecure:
                            type: boolean
                          path:
                            type: string
                          secretAccessKeyKey:
                            type: string
                        type: object
                    type: object
                type: object
              defragmentSchedule:
                type: string
              members:
                type: integer
              version:
                type: string
            required:
            - defragmentSchedule
            - members
            - version
            type: object
          status:
            properties:
              backup:
                properties:
                  backupStatusHistory:
                    items:
                      properties:
                        etcdRevision:
                          format: int64
                          type: integer
                        etcdVersion:
                          type: string
                        executeTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        path:
                          type: string
                        succeeded:
                          type: boolean
                      type: object
                    type: array
                  lastSucceededTime:
                    format: date-time
                    type: string
                  succeeded:
                    type: boolean
                type: object
              clientCertSecretName:
                type: string
              clientEndpoint:
                type: string
              lastDefragmentTime:
                format: date-time
                type: string
              lastReadyTransitionTime:
                format: date-time
                type: string
              members:
                items:
                  properties:
                    id:
                      format: int64
                      type: integer
                    leader:
                      type: boolean
                    name:
                      type: string
                    podName:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              phase:
                type: string
              ready:
                type: boolean
              restoreFrom:
                type: string
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: proxies.proxy.f110.dev
spec:
  group: proxy.f110.dev
  names:
    kind: Proxy
    listKind: ProxyList
    plural: proxies
    singular: proxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: string
    - description: Phase
      format: byte
      jsonPath: .status.phase
      name: phase
      type: string
    - description: Backends
      format: byte
      jsonPath: .status.numberOfBackends
      name: backends
      type: string
    - description: Age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Proxy is the Schema for the proxies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProxySpec defines the desired state of Proxy
            properties:
              administratorUnit:
                type: string
              backendSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  namespace:
                    type: string
                type: object
              backup:
                properties:
                  bucket:
                    type: string
                  credentialRef:
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  endpoint:
                    type: string
                  intervalInSecond:
                    format: int64
                    type: integer
                  maxBackups:
                    type: integer
                  path:
                    type: string
                required:
                - bucket
                - credentialRef
                - intervalInSecond
                - path
                type: object
              country:
                type: string
              dashboardReplicas:
                description: The number of replicas of dashboard. Default value is
                  "3".
                format: int32
                type: integer
              defragment:
                properties:
                  schedule:
                    type: string
                type: object
              domain:
                type: string
              httpPort:
                format: int32
                type: integer
              identityProvider:
                properties:
                  clientId:
                    type: string
                  clientSecretRef:
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  provider:
                    type: string
                  redirectUrl:
                    type: string
                required:
                - provider
                type: object
              issuerRef:
                description: ObjectReference is a reference to an object with a given
                  name, kind and group.
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              loadBalancerIP:
                type: string
              monitor:
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  prometheusMonitoring:
                    description: PrometheusMonitoring is set to true, then operator
                      creates ServiceMonitor object.
                    type: boolean
                type: object
              name:
                description: Name of proxy. if not present, uses "Lagrangian Proxy
                  CA"
                type: string
              organization:
                type: string
              port:
                format: int32
                type: integer
              proxyResources:
                description: 'ProxyResources field is able to control the resource
                  requirements and limits of front proxy. If it isn''t set, Use the
                  default value. (Default Value: requirements is cpu: 100m and memory:
                  128Mi. limits is cpu: 1 and memory: 256Mi)'
                properties:
                  limits:
                    additionalProperties:
                      type: string
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      type: string
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              replicas:
                description: The number of replicas of front proxy.
                format: int32
                type: integer
              roleSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  namespace:
                    type: string
                type: object
              rootUsers:
                items:
                  type: string
                type: array
              rpcPermissionSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  namespace:
                    type: string
                type: object
              rpcServerResources:
                description: 'RPCServerResources field is able tot control the resource
                  requiremets and limits of rpc server. If it isn''t set, Use the
                  default value. (Default Value: requirements is cpu: 100m and memory:
                  128Mi. limits is cpu: 1 and memory 256Mi)'
                properties:
                  limits:
                    additionalProperties:
                      type: string
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      type: string
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              session:
                properties:
                  keySecretRef:
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    type: string
                required:
                - type
                type: object
              version:
                type: string
            required:
            - administratorUnit
            - domain
            - identityProvider
            - issuerRef
            - organization
            - replicas
            - session
            type: object
          status:
            description: ProxyStatus defines the observed state of Proxy
            properties:
              caSecretName:
                type: string
              cookieSecretName:
                type: string
              githubWebhookSecretName:
                type: string
              internalTokenSecretName:
                type: string
              numberOfBackends:
                type: integer
              numberOfRoles:
                type: integer
              numberOfRpcPermissions:
                type: integer
              phase:
                type: string
              ready:
                type: boolean
              signingPrivateKeySecretName:
                type: string
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: roles.proxy.f110.dev
spec:
  group: proxy.f110.dev
  names:
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the roles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoleSpec defines the desired state of Role
            properties:
              bindings:
                items:
                  properties:
                    backendName:
                      type: string
                    namespace:
                      type: string
                    permission:
                      type: string
                    rpcPermissionName:
                      type: string
                  type: object
                type: array
              description:
                type: string
              title:
                type: string
            type: object
          status:
            description: RoleStatus defines the observed state of Role
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rpcpermissions.proxy.f110.dev
spec:
  group: proxy.f110.dev
  names:
    kind: RpcPermission
    listKind: RpcPermissionList
    plural: rpcpermissions
    singular: rpcpermission
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RpcPermission is the Schema for the rpcpermissions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RpcPermissionSpec defines the desired state of RpcPermission
            properties:
              allow:
                items:
                  type: string
                type: array
            required:
            - allow
            type: object
          status:
            description: RpcPermissionStatus defines the observed state of RpcPermission
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: heimdallr
  namespace: heimdallr
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: heimdallr
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: heimdallr
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - cronjobs
  - deployments
  - poddisruptionbudgets
  - pods
  - secrets
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - pods/portforward
  verbs:
  - create
  - get
  - list
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - etcd.f110.dev
  resources:
  - etcdclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - etcd.f110.dev
  resources:
  - etcdclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - proxy.f110.dev
  resources:
  - backends
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - proxy.f110.dev
  resources:
  - backends/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - proxy.f110.dev
  resources:
  - proxies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - proxy.f110.dev
  resources:
  - proxies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - proxy.f110.dev
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - proxy.f110.dev
  resources:
  - roles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - proxy.f110.dev
  resources:
  - rpcpermissions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - proxy.f110.dev
  resources:
  - rpcpermissions/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: heimdallr
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: heimdallr
  namespace: heimdallr
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: heimdallr
subjects:
- kind: ServiceAccount
  name: heimdallr
  namespace: heimdallr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: heimdallr-operator
  name: heimdallr-operator
  namespace: heimdallr
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: heimdallr-operator
  template:
    metadata:
      labels:
        control-plane: heimdallr-operator
    spec:
      containers:
      - args:
        - -lease-lock-name=operator
        - -lease-lock-namespace=$(MY_NAMESPACE)
        - -cluster-domain=cluster.local
        - -v=4
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/f110/heimdallr-operator:v0.5.0
        imagePullPolicy: Always
        name: operator
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: heimdallr
      terminationGracePeriodSeconds: 10
