load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["server.go"],
    importpath = "github.com/f110/lagrangian-proxy/pkg/rpc/rpcserver",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/auth:go_default_library",
        "//pkg/cert:go_default_library",
        "//pkg/config:go_default_library",
        "//pkg/database:go_default_library",
        "//pkg/logger:go_default_library",
        "//pkg/rpc:go_default_library",
        "//pkg/rpc/rpcservice:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/logging/zap:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/golang.org/x/xerrors:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["server_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//pkg/auth:go_default_library",
        "//pkg/cert:go_default_library",
        "//pkg/config:go_default_library",
        "//pkg/database:go_default_library",
        "//pkg/database/memory:go_default_library",
        "//pkg/logger:go_default_library",
        "//pkg/netutil:go_default_library",
        "//pkg/rpc:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/credentials:go_default_library",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
    ],
)
