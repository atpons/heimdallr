load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

proto_library(
    name = "rpc_proto",
    srcs = ["rpc.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_protobuf//:timestamp_proto",
        "@go_googleapis//google/api:annotations_proto",
    ],
)

go_proto_library(
    name = "rpc_go_proto",
    compilers = [
        "@io_bazel_rules_go//proto:go_grpc",
        "@grpc_ecosystem_grpc_gateway//protoc-gen-grpc-gateway:go_gen_grpc_gateway",
    ],
    importpath = "github.com/f110/lagrangian-proxy/pkg/server/rpc",
    proto = ":rpc_proto",
    visibility = ["//visibility:private"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "const.go",
        "method_matcher.go",
        "rpc.pb.go",
        "rpc.pb.gw.go",
        "util.go",
    ],
    importpath = "github.com/f110/lagrangian-proxy/pkg/rpc",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/database:go_default_library",
        "//vendor/github.com/golang/protobuf/descriptor:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/timestamp:go_default_library",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/runtime:go_default_library",
        "//vendor/github.com/grpc-ecosystem/grpc-gateway/utilities:go_default_library",
        "//vendor/golang.org/x/xerrors:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/api/annotations:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog:go_default_library",
        "//vendor/google.golang.org/grpc/status:go_default_library",
    ],
)

load("//build/rules/go:grpc.bzl", "vendor_grpc_source")

vendor_grpc_source(
    name = "vendor_grpc_source",
    src = ":rpc_go_proto",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["method_matcher_test.go"],
    embed = [":go_default_library"],
)
