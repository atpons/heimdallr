load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "client_interceptors.go",
        "context.go",
        "doc.go",
        "grpclogger.go",
        "options.go",
        "payload_interceptors.go",
        "server_interceptors.go",
    ],
    importmap = "github.com/f110/lagrangian-proxy/vendor/github.com/grpc-ecosystem/go-grpc-middleware/logging/zap",
    importpath = "github.com/grpc-ecosystem/go-grpc-middleware/logging/zap",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/protobuf/jsonpb:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/logging:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/logging/zap/ctxzap:go_default_library",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/tags/zap:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/go.uber.org/zap/zapcore:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog:go_default_library",
    ],
)
